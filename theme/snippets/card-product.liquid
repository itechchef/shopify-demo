{% comment %}
  Renders a product card

  Accepts:
  - card_product: {Object} Product Liquid object (optional)

  Usage:
  {% render 'card-product', card_product: product %}
{% endcomment %}

<div class="card-product p-6 border border-[#E8E8E8] rounded-xl">
  <div class="relative border border-[#E8E8E8] overflow-hidden rounded-xl w-full h-96">
    <img
      id="{{ card_product.variants.first.id }}"
      src="{{ card_product.variants.first.image | image_url: width: 480, height: 480 }}"
      alt="{{ card_product.title }}"
      class="image object-contain w-full h-full"
      onmouseenter="onMouseEnter(this)"
      onmouseleave="onMouseLeave(this)"
    >

    {% if card_product.compare_at_price > card_product.price %}
      <div class="sale-badge absolute top-4 left-4 text-[#FF0000] font-bold px-2 py-1 border border-[#FF0000] rounded-full">
        On Sale!
      </div>
    {% endif %}
  </div>

  <div class="variant-swatches flex items-center space-x-3 mt-4">
    {% for variant in card_product.variants %}
      <button
        id="{{ variant.id }}"
        class="w-8 h-8 rounded-full box-content border-white {% if variant == card_product.variants.first %}outline{% else %}!outline-none{% endif %} outline-offset-2"
        style="background-color: {{ variant.option1 | escape }}; outline: #0A4874 solid 2px;"
        onclick="
          changeVariant(
            this,
            '{{ card_product.id }}',
            '{{ variant.id }}',
            '{{ variant.featured_image | img_url: 'medium' }}',
            '{{ variant.price | money }}',
            '{{ variant.compare_at_price | money }}'
          )
        "
      ></button>
    {% endfor %}
  </div>

  <div class="mt-3">
    <p class="text-[#111111] text-sm">{{ card_product.vendor }}</p>
    <h3 class="font-bold text-base text-cyan-900">
      <a href="{{ card_product.url }}">{{ card_product.title }}</a>
    </h3>
    <div id="product-price-{{ card_product.id }}" class="flex">
      {% if card_product.compare_at_price > card_product.price %}
        <span class="text-[#111111] line-through">{{ card_product.compare_at_price | money }}</span>
        <span class="text-[#FF0000] ml-2">{{ card_product.price | money }}</span>
      {% else %}
        <span class="text-[#111111]">{{ card_product.price | money }}</span>
      {% endif %}
    </div>
  </div>
</div>

<script>
  function changeVariant(swatchEl, productId, variantId, imageUrl, price, compareAtPrice) {
    const productCard = swatchEl.closest('.card-product');

    productCard.querySelectorAll('.variant-swatches button').forEach((btn) => {
      btn.classList.remove('outline');
      btn.classList.add('!outline-none');
      if (btn.id === variantId) {
        btn.classList.add('outline');
        btn.classList.remove('!outline-none');
      }
    });

    const imageElement = productCard.querySelector('.image');
    if (imageElement) {
      imageElement.src = imageUrl;
      imageElement.id = variantId;
    }

    const priceElement = productCard.querySelector(`#product-price-${productId}`);
    if (priceElement) {
      if (compareAtPrice && compareAtPrice !== 'null') {
        priceElement.innerHTML = `
          <span class="text-[#111111] line-through">${compareAtPrice}</span>
          <span class="text-[#FF0000] ml-2">${price}</span>
        `;
      } else {
        priceElement.innerHTML = `<span class="text-[#111111]">${price}</span>`;
      }
    }

    // Toggle Sale badge
    const saleBadge = productCard.querySelector('.sale-badge');
    if (saleBadge) {
      if (compareAtPrice && compareAtPrice !== 'null') {
        saleBadge.style.visibility = 'visible';
      } else {
        saleBadge.style.visibility = 'hidden';
      }
    }
  }

  function onMouseEnter(element) {
    const productJson = JSON.parse('{{ card_product | json }}');
    const selectedVariant = productJson.variants.find((variant) => `${variant.id}` === element.id);
    const productCard = element.closest('.card-product');
    const image = productCard.querySelector('.image');
    image.src = selectedVariant.featured_image.src.replace('.png', '-secondary.png');
  }

  function onMouseLeave(element) {
    const productJson = JSON.parse('{{ card_product | json }}');
    const selectedVariant = productJson.variants.find((variant) => `${variant.id}` === element.id);
    const productCard = element.closest('.card-product');
    const image = productCard.querySelector('.image');
    image.src = selectedVariant.featured_image.src;
  }
</script>
